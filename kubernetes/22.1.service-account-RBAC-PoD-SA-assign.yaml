apiVersion: v1
kind: ServiceAccount
metadata:
  name: SA1
  namespace: default
---
#role create
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: SA1-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get","list","watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get","list","watch"]
- apiGroups: [""]
  resources: ["deployments"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["replicasets"]
  verbs: ["create","delete","get","list","patch","update","watch"]
  resourceNames: [“blue“, “orrange"]                                #restricting access to specific resource
---
#role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: SA1-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: SA1-role
subjects:
- kind: ServiceAccount
  name: SA1
  namespace: default
---
#pod-projected with service account

apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  serviceAccountName: SA1
  containers:
  - image: nginx
    name: nginx
    resources:
      limits:
        cpu: "1"
        memory: 500Mi
      requests:
        cpu: "0.5"
        memory: 256Mi