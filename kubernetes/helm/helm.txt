helm install <name >--dry-run --debug ./path
helm template -f values.yaml . >deployChart.yaml  #to troubleshoot
helm uninstall [release]
Perform App Upgrade and Rollback
Helm offers users multiple options for app upgrades, such as automatic rollback and upgrading to a specific version. Rollbacks can also be executed on their own. For detailed instructions on how to perform a rollback, check out How to Roll Back Changes with Helm.

Upgrade an app:

helm upgrade [release] [chart]

Instruct Helm to rollback changes if the upgrade fails:

helm upgrade [release] [chart] --atomic

Upgrade a release. If it does not exist on the system, install it:

helm upgrade [release] [chart] --install

Upgrade to a specified version:

helm upgrade [release] [chart] --version [version-number]

Roll back a release:

helm rollback [release] [revision]

Download Release Information
The helm get command lets you download information about a release.

Download all the release information:

helm get all [release]

Download all hooks:

helm get hooks [release]

Download the manifest:

helm get manifest [release]

Download the notes:

helm get notes [release]

Download the values file:

helm get values [release]

Fetch release history:

helm history [release] 

Add, Remove, and Update Repositories
The command helm repo helps you manipulate chart repositories.

Add a repository from the internet:

helm repo add [repository-name] [url]

Remove a repository from your system:

helm repo remove [repository-name]

Update repositories:

helm repo update

List and Search Repositories
Use the helm repo and helm search commands to list and search Helm repositories. helm search also enables you to find apps and repositories in Helm Hub.

List chart repositories:

helm repo list

Generate an index file containing charts found in the current directory:

helm repo index

Search charts for a keyword:

helm search [keyword]

Search repositories for a keyword:

helm search repo [keyword]

Search Helm Hub:

helm search hub [keyword]

Release Monitoring
The helm list command enables listing releases in a Kubernetes cluster according to several criteria, including using regular (Pearl compatible) expressions to filter results. Commands such as helm status and helm history provide more details about releases.

List all available releases in the current namespace:

helm list

List all available releases across all namespaces:

helm list --all-namespaces

List all releases in a specific namespace:

helm list --namespace [namespace]

List all releases in a specific output format:

helm list --output [format]

Apply a filter to the list of releases using regular expressions:

helm list --filter '[expression]'

See the status of a specific release:

helm status [release]

Display the release history:

helm history [release]

See information about the Helm client environment:

helm env

Note: Learn more about managing Kubernetes cluster namespaces and unwanted or multiple copies of Helm deployments by referring to our article How To Delete Helm Deployment And Namespace.

Plugin Management
Install, manage and remove Helm plugins by using the helm plugin command.

Install plugins:

helm plugin install [path/url1] [path/url2] ...

View a list of all installed plugins:

helm plugin list

Update plugins:

helm plugin update [plugin1] [plugin2] ...

Uninstall a plugin:

helm plugin uninstall [plugin]

Chart Management
Helm charts use Kubernetes resources to define an application. To find out more about their structure and requirements for their creation, refer to How to Create a Helm Chart.

Create a directory containing the common chart files and directories (chart.yaml, values.yaml, charts/ and templates/):

helm create [name]

Package a chart into a chart archive:

helm package [chart-path]

Run tests to examine a chart and identify possible issues:

helm lint [chart]

Inspect a chart and list its contents:

helm show all [chart] 

Display the chart’s definition:

helm show chart [chart] 

Display the chart’s values:

helm show values [chart]

Download a chart:

helm pull [chart]

Download a chart and extract the archive’s contents into a directory:

helm pull [chart] --untar --untardir [directory]

Display a list of a chart’s dependencies:

helm dependency list [chart]

Get Help and Version Information
Display the general help output for Helm:

helm --help

Show help for a particular helm command:

helm [command] --help

See the installed version of Helm:

helm version